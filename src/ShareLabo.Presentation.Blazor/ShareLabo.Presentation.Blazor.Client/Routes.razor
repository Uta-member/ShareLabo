<BootstrapComponent />
<Router AppAssembly="typeof(Program).Assembly" OnNavigateAsync="HandleNavigationAsync">
    <Found Context="routeData">
        <AuthorizeRouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)">
            <NotAuthorized>
                <RedirectToLogin />
            </NotAuthorized>
        </AuthorizeRouteView>
    </Found>
</Router>

@code {
    [Inject]
    public required NavigationManager Navigation { get; set; }
    [Inject]
    public required AuthenticationStateProvider AuthenticationStateProvider { get; set; }

    private async Task HandleNavigationAsync(NavigationContext args)
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var currentUri = Navigation.ToBaseRelativePath(Navigation.Uri).ToLowerInvariant();

        // 例外ルート（登録ページ）はリダイレクト対象から除外
        var isUserRegisterPage = currentUri.StartsWith(ShareLaboPagePath.UserRegister.Trim('/').ToLowerInvariant());

        // 認証済み かつ プロフィール未登録 かつ 登録ページ以外 → 登録へ
        if (user.Identity?.IsAuthenticated == true &&
            !user.HasClaim(ShareLaboClaimTypes.IsProfileRegistered, "true") &&
            !isUserRegisterPage)
        {
            // SPA内遷移でOK（forceLoad=false）
            Navigation.NavigateTo(ShareLaboPagePath.Helper.UserRegister(), forceLoad: false);
        }
    }
}
