// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ShareLabo.Infrastructure.EFPG.Table;

#nullable disable

namespace ShareLabo.Infrastructure.EFPG.Table.Migrations
{
    [DbContext(typeof(ShareLaboDbContext))]
    [Migration("20250901153950_AddTimeLine")]
    partial class AddTimeLine
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbAccount", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_id")
                        .HasComment("アカウントID");

                    b.Property<int>("ConditionFlg")
                        .HasColumnType("integer")
                        .HasColumnName("condition_flg")
                        .HasComment("状態フラグ");

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<bool>("IsLast")
                        .HasColumnType("boolean")
                        .HasColumnName("is_last")
                        .HasComment("最新フラグ");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password_hash")
                        .HasComment("パスワードハッシュ");

                    b.Property<int>("Seq")
                        .HasColumnType("integer")
                        .HasColumnName("seq")
                        .HasComment("バージョン番号");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id")
                        .HasComment("ユーザID");

                    b.HasKey("PointerNo")
                        .HasName("pk_accounts");

                    b.ToTable("accounts", (string)null);
                });

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbGroup", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("group_id")
                        .HasComment("グループID");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("group_name")
                        .HasComment("グループ名");

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.HasKey("PointerNo")
                        .HasName("pk_groups");

                    b.ToTable("groups", (string)null);
                });

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbGroupMember", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<string>("GroupId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("group_id")
                        .HasComment("グループID");

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id")
                        .HasComment("メンバーID");

                    b.HasKey("PointerNo")
                        .HasName("pk_group_members");

                    b.ToTable("group_members", (string)null);
                });

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbPost", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("post_content")
                        .HasComment("投稿内容");

                    b.Property<DateTime>("PostDateTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("post_date_time")
                        .HasComment("投稿日時");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("post_id")
                        .HasComment("投稿ID");

                    b.Property<string>("PostTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("post_title")
                        .HasComment("投稿タイトル");

                    b.Property<string>("PostUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("post_user_id")
                        .HasComment("投稿者ID");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.HasKey("PointerNo")
                        .HasName("pk_posts");

                    b.ToTable("posts", (string)null);
                });

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbTimeLine", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<string>("TimeLineId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("time_line_id")
                        .HasComment("タイムラインID");

                    b.Property<string>("TimeLineName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("time_line_name")
                        .HasComment("タイムライン名");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.HasKey("PointerNo")
                        .HasName("pk_time_lines");

                    b.ToTable("time_lines", (string)null);
                });

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbTimeLineFilter", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<string>("TimeLineId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("time_line_id")
                        .HasComment("タイムラインID");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id")
                        .HasComment("ユーザID");

                    b.HasKey("PointerNo")
                        .HasName("pk_time_line_filters");

                    b.ToTable("time_line_filters", (string)null);
                });

            modelBuilder.Entity("ShareLabo.Infrastructure.EFPG.Table.DbUser", b =>
                {
                    b.Property<int>("PointerNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("pointer_no");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PointerNo"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("account_id")
                        .HasComment("アカウントID");

                    b.Property<int>("ConditionFlg")
                        .HasColumnType("integer")
                        .HasColumnName("condition_flg")
                        .HasComment("状態フラグ");

                    b.Property<DateTime>("InsertTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("insert_time_stamp")
                        .HasComment("作成日時");

                    b.Property<string>("InsertUserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("insert_user_id")
                        .HasComment("作成者ID");

                    b.Property<bool>("IsLast")
                        .HasColumnType("boolean")
                        .HasColumnName("is_last")
                        .HasComment("最新フラグ");

                    b.Property<int>("Seq")
                        .HasColumnType("integer")
                        .HasColumnName("seq")
                        .HasComment("バージョン番号");

                    b.Property<DateTime?>("UpdateTimeStamp")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("update_time_stamp")
                        .HasComment("更新日時");

                    b.Property<string>("UpdateUserId")
                        .HasColumnType("text")
                        .HasColumnName("update_user_id")
                        .HasComment("更新者ID");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_id")
                        .HasComment("ユーザID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name")
                        .HasComment("ユーザ名");

                    b.HasKey("PointerNo")
                        .HasName("pk_users");

                    b.ToTable("users", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
